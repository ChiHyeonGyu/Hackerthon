
package com.ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

import com.datatype.Member;
import com.function.Function;
import com.function.Resolution;

public class DeleteUI extends JFrame implements ActionListener {

	private JTextField text_id = null;
	private JPasswordField text_passwd = null;

	private JPasswordField text_passwdagain = null;
	private JTextField text_name = null;

	private JButton button_doublecheck = null, button_check = null;

	private Function function = new Function();

	public DeleteUI() {
		super("여긴 절대 안갈 거에요");

		setLayout(null);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(Resolution.x/2-550, Resolution.y/2-500,640,900);
		setResizable(true);

		JLabel label_id = new JLabel("안먹을  메뉴 입력해주세요  ");
		JLabel label_passwd = new JLabel("여긴 다시 안갈 식당입니다  ");
		//JLabel label_passwdagain = new JLabel("비밀번호 확인 : ");
		//JLabel label_name = new JLabel("이름 : ");

		label_id.setBounds(110, 100, 200, 20);
		label_passwd.setBounds(110, 290, 200, 20);
		//label_passwdagain.setBounds(20, 80, 100, 20);
		//label_name.setBounds(20, 110, 100, 20);

		text_id = new JTextField();
		text_passwd = new JPasswordField();
		//text_passwdagain = new JPasswordField();
		//text_name = new JTextField();

		text_id.setBounds(110, 150, 200, 90);
		text_passwd.setBounds(110, 350, 200, 90);
		//text_passwdagain.setBounds(150, 80, 100, 20);
		//text_name.setBounds(150, 110, 100, 20);

		//button_doublecheck = new JButton("중복확인");
		button_check = new JButton("내 목록에서 지워!!!");

		//button_doublecheck.setBounds(20, 170, 130, 20);
		button_check.setBounds(110,540,400,100);

		//button_doublecheck.addActionListener(this);
		button_check.addActionListener(this);

		add(label_id);
		add(label_passwd);
		//add(label_passwdagain);
		//add(label_name);
		add(text_id);
		add(text_passwd);
		//add(text_passwdagain);
		//add(text_name);
		//add(button_doublecheck);
		add(button_check);

		setVisible(false);
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		Object o = e.getSource();
		String id = text_id.getText();
		String passwd = text_passwd.getText();
		String passwdagain = text_passwdagain.getText();
		String name = text_name.getText();
		BufferedReader in = null;
		String DATA_FILE = "member_info.txt";
		boolean a = true;
		String k;
		if (o == button_doublecheck) {
			if (!(id.equals(""))) {
				try {
					in = new BufferedReader(new FileReader(DATA_FILE));
					while ((k = in.readLine()) != null) {
						String line[] = k.split("/");

						if (line[0].equals(id)) {
							JOptionPane.showMessageDialog(null, " 아이디 중복입니다.");

							a = false;
						}
						in.close();
					}
					if (k == null) {
						if (!(id.equals(""))) {
							
							a=false;
							JOptionPane.showMessageDialog(null, "아이디를 입력하세요");
						}
						else {
							a = true;
							JOptionPane.showMessageDialog(null, "사용가능한 아이디입니다.");

						}
					
					}
				} catch (IOException e1) {
					a=true;
					JOptionPane.showMessageDialog(null, "사용가능한 아이디입니다.");

				}
			} else {
				a = false;
				JOptionPane.showMessageDialog(null, "아이디를 입력하세요.");
			}
		}
		if (o == button_check) {
			if (id.equals("") || passwd.equals("") || name.equals(""))//이 부분 처리안해도 된다 하셨는데 안하고 하려니깐 아무것도 안적은 빈칸으로도 가입성공이 되버려서
				JOptionPane.showMessageDialog(null, "빈칸이 있네요.");//그냥 해버렸습니다
			else {
				 if (a == false)
					JOptionPane.showMessageDialog(null, "아이디 중복확인을 해주세요.");
				
				if (passwd.equals(passwdagain) && a == true) {
					function.add(new Member(id, passwd));
					JOptionPane.showMessageDialog(null, "가입에 성공하셨습니다");
					setVisible(false);
				} 
				else if (!passwd.equals(passwdagain))
					JOptionPane.showMessageDialog(null, "비밀번호를 다시 확인해 주십시오.");
			}
		}
		}
	}

